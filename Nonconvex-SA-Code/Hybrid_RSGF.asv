%% Hybrid RSGF
if (strcmp(cur_alg, 'Hybrid_RSGF') == 1)
    fprintf('     \n');
    fprintf('*** Running Hybrid-RSGF\n');
    num_Hybrid_RSGF = num_Hybrid_RSGF+1;
else
    fprintf('     \n');
    fprintf('*** Running Mirror descent SA\n');
    num_Mirror_descent = num_Mirror_descent+1;
end
if N_iter <= 1000
    seed_val = data.seed+120;
else
    seed_val = data.seed+130;
end
Run_number = 0;
j=1;
grad_best  = zeros(1, Run_times);
loss_best  = zeros(1, Run_times);
best_solution = zeros(Run_times, data.dim);
num_rnd = S;
while j <= Run_times
    data.vali= N_iter/(2*S);
    zero_eval_xbar;
    j= j+1;
end
var_grad = var(grad_best);
mean_grad = mean(grad_best);
var_loss = var(loss_best);
mean_loss = mean(loss_best);
zero_Results_showing;
if strcmp(cur_alg, 'Hybrid_RSGF') == 1
    best_solution_Hybrid_RSGF(count_Hybrid_RSGF+1:count_Hybrid_RSGF +Run_times,1) = N_iter;
    best_solution_Hybrid_RSGF(count_Hybrid_RSGF+1:count_Hybrid_RSGF+Run_times,2:data.dim+1) = best_solution;
    var_grad_Hybrid_RSGF(num_Hybrid_RSGF,1) = N_iter;
    var_grad_Hybrid_RSGF(num_Hybrid_RSGF,2) = var_grad;
    mean_grad_Hybrid_RSGF(num_Hybrid_RSGF,1) = N_iter;
    mean_grad_Hybrid_RSGF(num_Hybrid_RSGF,2) = mean_grad;
    var_loss_Hybrid_RSGF(num_Hybrid_RSGF,1) = N_iter;
    var_loss_Hybrid_RSGF(num_Hybrid_RSGF,2) = var_loss;
    mean_loss_Hybrid_RSGF(num_Hybrid_RSGF,1) = N_iter;
    mean_loss_Hybrid_RSGF(num_Hybrid_RSGF,2) = mean_loss;
    save(filename, 'initial_solution','var_grad_Hybrid_RSGF' ,'mean_grad_Hybrid_RSGF','var_loss_Hybrid_RSGF','mean_loss_Hybrid_RSGF','best_solution_Hybrid_RSGF', '-append');
    frep=fopen(curr_path2,'a');
    fprintf(frep,'     \n');
    fprintf(frep,'*** Running Hybrid_RSGF\n');
    zero_Results_showing2;
    fclose(frep);
    count_Hybrid_RSGF = count_Hybrid_RSGF + Run_times;
else
    best_solution_Mirror_descent(count_Mirror_descent+1:count_Mirror_descent +Run_times,1) = N_iter;
    best_solution_Mirror_descent(count_Mirror_descent+1:count_Mirror_descent+Run_times,2:data.dim+1) = best_solution;
    var_grad_Mirror_descent(num_Mirror_descent,1) = N_iter;
    var_grad_Mirror_descent(num_Mirror_descent,2) = var_grad;
    mean_grad_Mirror_descent(num_Mirror_descent,1) = N_iter;
    mean_grad_Mirror_descent(num_Mirror_descent,2) = mean_grad;
    var_loss_Mirror_descent(num_Mirror_descent,1) = N_iter;
    var_loss_Mirror_descent(num_Mirror_descent,2) = var_loss;
    mean_loss_Mirror_descent(num_Mirror_descent,1) = N_iter;
    mean_loss_Mirror_descent(num_Mirror_descent,2) = mean_loss;
    save(filename,'initial_solution','var_grad_Mirror_descent' ,'mean_grad_Mirror_descent','var_loss_Mirror_descent','mean_loss_Mirror_descent','best_solution_Mirror_descent', '-append');
    frep=fopen(curr_path2,'a');
    fprintf(frep,'     \n');
    fprintf(frep,'*** Running Mirror_descent\n');
    Results_showing2;
    fclose(frep);
    count_Mirror_descent = count_Mirror_descent + Run_times;
end
